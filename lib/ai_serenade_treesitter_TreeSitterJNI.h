/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ai_serenade_treesitter_TreeSitterJNI */

#ifndef _Included_ai_serenade_treesitter_TreeSitterJNI
#define _Included_ai_serenade_treesitter_TreeSitterJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    cursorCurrentFieldName
 * Signature: (Lai/serenade/treesitter/TreeCursor;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_cursorCurrentFieldName
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    gotoFirstChild
 * Signature: (Lai/serenade/treesitter/TreeCursor;)Z
 */
JNIEXPORT jboolean JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_gotoFirstChild
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    gotoNextSibling
 * Signature: (Lai/serenade/treesitter/TreeCursor;)Z
 */
JNIEXPORT jboolean JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_gotoNextSibling
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    gotoParent
 * Signature: (Lai/serenade/treesitter/TreeCursor;)Z
 */
JNIEXPORT jboolean JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_gotoParent
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    nodeChild
 * Signature: (Lai/serenade/treesitter/Node;I)Lai/serenade/treesitter/Node;
 */
JNIEXPORT jobject JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_nodeChild
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    nodeChildCount
 * Signature: (Lai/serenade/treesitter/Node;)I
 */
JNIEXPORT jint JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_nodeChildCount
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    nodeEndByte
 * Signature: (Lai/serenade/treesitter/Node;)I
 */
JNIEXPORT jint JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_nodeEndByte
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    nodeStartByte
 * Signature: (Lai/serenade/treesitter/Node;)I
 */
JNIEXPORT jint JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_nodeStartByte
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    nodeString
 * Signature: (Lai/serenade/treesitter/Node;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_nodeString
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    nodeType
 * Signature: (Lai/serenade/treesitter/Node;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_nodeType
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    parserNew
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_parserNew
  (JNIEnv *, jclass);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    parserDelete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_parserDelete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    parserSetLanguage
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_parserSetLanguage
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    parserSetLanguagePointer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_parserSetLanguagePointer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    parserParseString
 * Signature: (JLjava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_parserParseString
  (JNIEnv *, jclass, jlong, jstring, jint);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    treeCursorNew
 * Signature: (Lai/serenade/treesitter/Node;)Lai/serenade/treesitter/TreeCursor;
 */
JNIEXPORT jobject JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_treeCursorNew
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    treeDelete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_treeDelete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     ai_serenade_treesitter_TreeSitterJNI
 * Method:    treeRootNode
 * Signature: (J)Lai/serenade/treesitter/Node;
 */
JNIEXPORT jobject JNICALL Java_ai_serenade_treesitter_TreeSitterJNI_treeRootNode
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
